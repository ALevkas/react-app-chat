{"version":3,"sources":["utils/consts.js","components/Layout/Header.jsx","components/Shared/Loader.jsx","routes.js","components/Auth/Login.jsx","components/Chat/Chat.jsx","components/Shared/AppRouter.jsx","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Header","auth","useContext","Context","useAuthState","isUser","className","AppBar","position","Toolbar","Grid","container","justify","Button","onClick","signOut","variant","to","Loader","Container","style","height","window","innerHeight","alignItems","direction","class","publicRoutes","path","Component","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","user","console","log","width","background","Box","p","privateRoutes","firestore","useCollectionData","collection","orderBy","messages","loading","refMessages","useRef","useState","value","setValue","sendMessage","add","uid","displayName","photoURL","text","createdAt","FieldValue","serverTimestamp","useEffect","current","scrollTop","scrollHeight","marginTop","ref","border","overflowY","borderRadius","padding","map","message","margin","marginLeft","display","gap","Avatar","src","fontWeight","color","TextField","fullWidth","rowsMax","onChange","e","target","onKeyUp","key","AppRouter","component","exact","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d6c414b.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login';\r\nexport const CHAT_ROUTE = '/chat';\r\n","import React, { useContext } from 'react';\r\nimport { AppBar, Toolbar, Grid, Button } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LOGIN_ROUTE } from '../../utils/consts';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Context } from '../..';\r\n\r\nexport const Header = () => {\r\n    const { auth } = useContext(Context);\r\n    const [isUser] = useAuthState(auth);\r\n    return (\r\n        <header className='header'>\r\n            <AppBar position='static'>\r\n                <Toolbar>\r\n                    <Grid container justify={'flex-end'}>\r\n                        {isUser ? (\r\n                            <Button\r\n                                onClick={() => auth.signOut()}\r\n                                variant={'outlined'}\r\n                            >\r\n                                Выйти\r\n                            </Button>\r\n                        ) : (\r\n                            <NavLink to={LOGIN_ROUTE}>\r\n                                <Button variant={'outlined'}>Войти</Button>\r\n                            </NavLink>\r\n                        )}\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </header>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Box, Button, Container, Grid } from '@material-ui/core';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                style={{ height: window.innerHeight - 64 }}\r\n                alignItems={'center'}\r\n                justify={'center'}\r\n            >\r\n                <Grid container alignItems={'center'} direction={'column'}>\r\n                    <div class='lds-spinner'>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import { Login } from './components/Auth/Login';\r\nimport { Chat } from './components/Chat/Chat';\r\nimport { CHAT_ROUTE, LOGIN_ROUTE } from './utils/consts';\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Login,\r\n    },\r\n];\r\n\r\nexport const privateRoutes = [\r\n    {\r\n        path: CHAT_ROUTE,\r\n        Component: Chat,\r\n    },\r\n];\r\n","import { Box, Button, Container, Grid } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../../index';\r\nimport firebase from 'firebase';\r\n\r\nexport const Login = () => {\r\n    const { auth } = useContext(Context);\r\n\r\n    const login = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        const user = await auth.signInWithPopup(provider);\r\n        console.log(user);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                style={{ height: window.innerHeight - 64 }}\r\n                alignItems={'center'}\r\n                justify={'center'}\r\n            >\r\n                <Grid\r\n                    style={{ width: 400, background: 'lightblue' }}\r\n                    container\r\n                    alignItems={'center'}\r\n                    direction={'column'}\r\n                >\r\n                    <Box p={5}>\r\n                        <Button onClick={login} variant={'outlined'}>\r\n                            Войти с помощью Google\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n","import { Button, Container, Grid, TextField, Avatar } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { Context } from '../../index';\r\nimport Loader from '../Shared/Loader';\r\nimport firebase from 'firebase';\r\n\r\nexport const Chat = () => {\r\n    const { auth, firestore } = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n    const [messages, loading] = useCollectionData(\r\n        firestore.collection('messages').orderBy('createdAt')\r\n    );\r\n\r\n    const refMessages = useRef(null);\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const sendMessage = async () => {\r\n        firestore.collection('messages').add({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n            text: value,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setValue('');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (refMessages.current) {\r\n            refMessages.current.scrollTop = refMessages.current.scrollHeight;\r\n        }\r\n    }, [messages]);\r\n\r\n    if (loading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                style={{ height: window.innerHeight - 84, marginTop: 20 }}\r\n                justify={'center'}\r\n            >\r\n                <div\r\n                    ref={refMessages}\r\n                    style={{\r\n                        width: '80%',\r\n                        height: '70vh',\r\n                        background: '#fff',\r\n                        border: '1px solid gray',\r\n                        overflowY: 'auto',\r\n                        borderRadius: '6px',\r\n                        scrollTop: '999',\r\n                        padding: '25px',\r\n                    }}\r\n                >\r\n                    {messages.map((message) => (\r\n                        <div\r\n                            style={{\r\n                                margin: 10,\r\n                                marginLeft:\r\n                                    user.uid === message.uid\r\n                                        ? 'calc(80% - 60px)'\r\n                                        : '10px',\r\n                                width: 'fit-content',\r\n                                padding: 5,\r\n                            }}\r\n                        >\r\n                            <Grid container>\r\n                                <div\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        direction: 'row',\r\n                                        gap: 10,\r\n                                    }}\r\n                                >\r\n                                    <Avatar src={message.photoURL} />\r\n                                    <Grid container direction={'column'}>\r\n                                        <div\r\n                                            style={{\r\n                                                fontWeight: 'bold',\r\n                                                color: 'rgb(25, 118, 210)',\r\n                                            }}\r\n                                        >\r\n                                            {message.displayName}\r\n                                        </div>{' '}\r\n                                        <div>{message.text}</div>\r\n                                    </Grid>\r\n                                </div>\r\n                            </Grid>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <Grid\r\n                    container\r\n                    direction={'column'}\r\n                    alignItems={'flex-end'}\r\n                    style={{ width: '80%' }}\r\n                >\r\n                    <TextField\r\n                        variant={'outlined'}\r\n                        fullWidth\r\n                        rowsMax={2}\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                        onKeyUp={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                sendMessage();\r\n                            }\r\n                        }}\r\n                        style={{ background: '#fff' }}\r\n                    />\r\n                    <Button\r\n                        onClick={sendMessage}\r\n                        variant={'outlined'}\r\n                        style={{ background: '#3F51B5', marginTop: 10 }}\r\n                    >\r\n                        Отправить\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { privateRoutes, publicRoutes } from '../../routes';\r\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../../utils/consts';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Context } from '../../index';\r\n\r\nconst AppRouter = () => {\r\n    const { auth } = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n\r\n    return user ? (\r\n        <Switch>\r\n            {privateRoutes.map(({ path, Component }) => (\r\n                <Route\r\n                    key={path}\r\n                    path={path}\r\n                    component={Component}\r\n                    exact={true}\r\n                />\r\n            ))}\r\n            <Redirect to={CHAT_ROUTE} />\r\n        </Switch>\r\n    ) : (\r\n        <Switch>\r\n            {publicRoutes.map(({ path, Component }) => (\r\n                <Route\r\n                    key={path}\r\n                    path={path}\r\n                    component={Component}\r\n                    exact={true}\r\n                />\r\n            ))}\r\n            <Redirect to={LOGIN_ROUTE} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useContext } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Header } from './components/Layout/Header';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Context } from './index';\r\n\r\nimport AppRouter from './components/Shared/AppRouter';\r\nimport Loader from './components/Shared/Loader';\r\n\r\nfunction App() {\r\n    const { auth } = useContext(Context);\r\n    const [user, loading, error] = useAuthState(auth);\r\n\r\n    if (loading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Header />\r\n            <AppRouter />\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React, { createContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: 'AIzaSyDT2yqH4-2-YvslIAp5sVAqmo7gFAucdM0',\r\n    authDomain: 'react-chat-2c86f.firebaseapp.com',\r\n    projectId: 'react-chat-2c86f',\r\n    storageBucket: 'react-chat-2c86f.appspot.com',\r\n    messagingSenderId: '106764172728',\r\n    appId: '1:106764172728:web:19e6fb83577fef0f12234d',\r\n    measurementId: 'G-2FBFFTWXLQ',\r\n});\r\n\r\nexport const Context = createContext(null);\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nReactDOM.render(\r\n    <Context.Provider\r\n        value={{\r\n            firebase,\r\n            auth,\r\n            firestore,\r\n        }}\r\n    >\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    </Context.Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}